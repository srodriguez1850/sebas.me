{"ast":null,"code":"var _jsxFileName = \"/Users/sebastian/Documents/GitHub/sebas.me/src/pages/tetris.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Header from '../components/header';\nimport { Unity, useUnityContext } from \"react-unity-webgl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Tetris = () => {\n  _s();\n\n  const squareSize = 500;\n  const {\n    unityProvider,\n    isLoaded,\n    loadingProgression\n  } = useUnityContext({\n    loaderUrl: \"pages/tetris/build/tetris.loader.js\",\n    dataUrl: \"pages/tetris/build/tetris.data.unityweb\",\n    frameworkUrl: \"pages/tetris/build/tetris.framework.js.unityweb\",\n    codeUrl: \"pages/tetris/build/tetris.wasm.unityweb\"\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"main\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"inner\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Modular Tetris\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"align-center\",\n            children: [isLoaded === false &&\n            /*#__PURE__*/\n            // We'll conditionally render the loading overlay if the Unity\n            // Application is not loaded.\n            _jsxDEV(\"div\", {\n              className: \"loading-overlay\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Loading... (\", loadingPercentage, \"%)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Unity, {\n              unityProvider: unityProvider,\n              style: {\n                width: squareSize,\n                height: squareSize\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            class: \"align-center\",\n            children: \"Controls\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"align-center\",\n            children: \"Modular style Tetris with combiantion mechanics of different games.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            class: \"align-center\",\n            children: \"Overview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"align-center\",\n            children: \"Modular style Tetris with combiantion mechanics of different games.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"align-center\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/\",\n              class: \"button\",\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(Tetris, \"MajCTFRgNTGkOXZ3oYyoXxXInLg=\", false, function () {\n  return [useUnityContext];\n});\n\n_c = Tetris;\nexport default Tetris;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tetris\");","map":{"version":3,"sources":["/Users/sebastian/Documents/GitHub/sebas.me/src/pages/tetris.js"],"names":["React","Header","Unity","useUnityContext","Tetris","squareSize","unityProvider","isLoaded","loadingProgression","loaderUrl","dataUrl","frameworkUrl","codeUrl","loadingPercentage","width","height"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,KAAT,EAAgBC,eAAhB,QAAuC,mBAAvC;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAEnB,QAAMC,UAAU,GAAG,GAAnB;AAEA,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,QAAjB;AAA2BC,IAAAA;AAA3B,MAAkDL,eAAe,CAAC;AACtEM,IAAAA,SAAS,EAAE,qCAD2D;AAEtEC,IAAAA,OAAO,EAAE,yCAF6D;AAGtEC,IAAAA,YAAY,EAAE,iDAHwD;AAItEC,IAAAA,OAAO,EAAE;AAJ6D,GAAD,CAAvE;AAOA,sBAAQ;AAAA,2BACN;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA,8BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAK,QAAA,EAAE,EAAC,MAAR;AAAA,+BACE;AAAK,UAAA,KAAK,EAAC,OAAX;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAGA;AAAK,YAAA,KAAK,EAAC,cAAX;AAAA,uBACCL,QAAQ,KAAK,KAAb;AAAA;AACC;AACA;AACA;AAAK,cAAA,SAAS,EAAC,iBAAf;AAAA,qCACE;AAAA,2CAAgBM,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAJF,eAQA,QAAC,KAAD;AAAO,cAAA,aAAa,EAAEP,aAAtB;AAAqC,cAAA,KAAK,EAAE;AAAEQ,gBAAAA,KAAK,EAAET,UAAT;AAAqBU,gBAAAA,MAAM,EAAEV;AAA7B;AAA5C;AAAA;AAAA;AAAA;AAAA,oBARA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHA,eAcA;AAAA;AAAA;AAAA;AAAA,kBAdA,eAgBA;AAAI,YAAA,KAAK,EAAC,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhBA,eAiBE;AAAG,YAAA,KAAK,EAAC,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBF,eAmBA;AAAA;AAAA;AAAA;AAAA,kBAnBA,eAqBA;AAAI,YAAA,KAAK,EAAC,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBArBA,eAsBE;AAAG,YAAA,KAAK,EAAC,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAtBF,eAwBE;AAAA;AAAA;AAAA;AAAA,kBAxBF,eA0BA;AAAK,YAAA,KAAK,EAAC,cAAX;AAAA,mCACE;AAAG,cAAA,IAAI,EAAC,GAAR;AAAY,cAAA,KAAK,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADM,mBAAR;AAsCD,CAjDD;;GAAMD,M;UAIoDD,e;;;KAJpDC,M;AAmDN,eAAeA,MAAf","sourcesContent":["import React from \"react\";\nimport Header from '../components/header'\nimport { Unity, useUnityContext } from \"react-unity-webgl\";\n\nconst Tetris = () => {\n\n  const squareSize = 500\n\n  const { unityProvider, isLoaded, loadingProgression } = useUnityContext({\n    loaderUrl: \"pages/tetris/build/tetris.loader.js\",\n    dataUrl: \"pages/tetris/build/tetris.data.unityweb\",\n    frameworkUrl: \"pages/tetris/build/tetris.framework.js.unityweb\",\n    codeUrl: \"pages/tetris/build/tetris.wasm.unityweb\",\n  });\n\n  return (<>\n    <div id=\"wrapper\">\n    <Header />\n    <div id=\"main\">\n      <div class=\"inner\">\n        <h1>Modular Tetris</h1>\n\n      <div class=\"align-center\">\n      {isLoaded === false && (\n        // We'll conditionally render the loading overlay if the Unity\n        // Application is not loaded.\n        <div className=\"loading-overlay\">\n          <p>Loading... ({loadingPercentage}%)</p>\n        </div>\n      )}\n      <Unity unityProvider={unityProvider} style={{ width: squareSize, height: squareSize }} />\n      </div>\n\n      <br />\n\n      <h2 class=\"align-center\">Controls</h2>\n        <p class=\"align-center\">Modular style Tetris with combiantion mechanics of different games.</p>\n\n      <br />\n\n      <h2 class=\"align-center\">Overview</h2>\n        <p class=\"align-center\">Modular style Tetris with combiantion mechanics of different games.</p>\n              \n        <hr />\n\n      <div class=\"align-center\">\n        <a href=\"/\" class=\"button\">Back</a>\n      </div>\n      </div>\n    </div>\n    </div>\n    </>\n  );\n};\n  \nexport default Tetris;"]},"metadata":{},"sourceType":"module"}